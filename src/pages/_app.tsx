/* eslint-disable @typescript-eslint/no-unused-vars */

///////////////////////////////////// login page

// react import
import React, { useEffect } from 'react'

// type 'AppProps" from next/app
import type { AppProps } from 'next/app'

// framer-motion <3 (dinamic animate framework)
import { AnimatePresence } from 'framer-motion'

// global css import
import GlobalStyle from '../styles/global-style'

// import theme provider from styled components, to share theme with all components.
import { ThemeProvider } from 'styled-components'
import themePalette from '../styles/theme-palette'

// import theme provider from material-ui, integrate it with theme object used by styled components
import {
    ThemeProvider as MUI_ThemeProvider,
    createTheme,
} from '@mui/material/styles'

const MUI_colorsVar = createTheme(themePalette)

// material-ui variant module called notistack, it makes popups appear in a imperative way, not needing to
// controlate the state of the component or something like that.
import { SnackbarProvider } from 'notistack'

// auth component (used to update redux with auth functions and values)
import FirebaseAuthComponent from '../lib/firebase/firebase-auth-component'

// import auth provider
import { initializedApp } from '../lib/firebase/firebase-config' // initialized app to app-check in frontend
import { initializeAppCheck, ReCaptchaV3Provider } from 'firebase/app-check' // captcha provider

// now, they're using the same object for all the theme three distributed across all application - i dont know if this
// is the best solution of the problem, but its working | if someone want to feedback this with better integrations, feel
// free to give a touch.
// export MyApp "global" / main component, that includes other pages in <Component {...pageProps} />.

// redux provider
import withWrapper from '../lib/redux/store/store'

function MyApp({ Component, pageProps, router }: AppProps) {
    // on render (client-side) sets appcheck from firebase
    useEffect(() => {
        initializeAppCheck(initializedApp, {
            provider: new ReCaptchaV3Provider(
                '6Lfq3D0fAAAAAMa23A40f4Ji2wg9ASEd9Zc7mXCl'
            ),
            isTokenAutoRefreshEnabled: true,
        })
        return () => {
            return
        }
    })

    return (
        //styled components theme provider
        <ThemeProvider theme={themePalette}>
            {/* MUI theme provider */}
            <MUI_ThemeProvider theme={MUI_colorsVar}>
                {/* snackbar imperative | notistack provider */}
                <SnackbarProvider preventDuplicate={false} maxSnack={1}>
                    {/* animate the enter and exit from pages */}
                    <AnimatePresence exitBeforeEnter>
                        <Component {...pageProps} key={router.pathname} />
                    </AnimatePresence>
                    {/* global style component generated by styled-components*/}
                    <GlobalStyle />
                    {/* auth component that provides authUser and other functions, with firebase event trigger */}
                    <FirebaseAuthComponent />
                </SnackbarProvider>
            </MUI_ThemeProvider>
        </ThemeProvider>
    )
}

export default withWrapper.withRedux(MyApp)
